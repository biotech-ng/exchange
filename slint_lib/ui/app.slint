import { StandardButton, Button , ListView, LineEdit } from "std-widgets.slint";
import { ImageButton } from "common.slint";
import { ChatRow } from "chat.slint";
import { IncomingMessage, OutcomingMessage } from "message.slint";

component InputSearch inherits Rectangle {
    callback edit <=> input.edited;
    out property <bool> focused;

    input := LineEdit  {
        height: 40px;
        font-size: 14px;
        preferred-width: 100%;
        placeholder-text: "Search";
    }
}

export component MyApp inherits Window {
    preferred-width: 100%;
    preferred-height: 100%;
    min-width: 900px;
    min-height: 600px;

    HorizontalLayout {

        VerticalLayout {
            width: 30%;
            
            HorizontalLayout {
                padding: 10px;
                spacing: 10px;

                ImageButton {
                    image-url: @image-url("assets/settings.png");
                }

                InputSearch {

                }              
                       
            }

            ListView { 
                height: 100%;  
                for i in 20 : ChatRow {
                    index: i;
                }
            }
        }

        Rectangle {
            width: 1px;
            background: #d4d4d4;
        }

        VerticalLayout {
            width: 70%;
            height: 100%;

            Rectangle {
                background: #cccccc;
                height: 100%;
            
                Image {
                    width: 100%;
                    height: 100%;
                    source: @image-url("assets/bg.jpg");
                    image-fit: fill;
                    opacity: 0.2;
                }
    
                ListView { 
                    height: 100%; 
                    
                    for i in [false, false, true, true, false, true, false, false, true, true, false, true]
                        : HorizontalLayout {
                            if (!i) : IncomingMessage{}
                            if (i) : OutcomingMessage{}
                        }
                        
                    
                }
            }
        }       

        
    }
}